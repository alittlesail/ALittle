
register namespace carp;

public enum CarpLuaDebugEventTypes
{
	CLDE_BREAK_IN = 1;
    CLDE_BREAK_OUT = 2;
}

public struct CarpLuaDebugEvent
{
    int type;

    // CLDE_BREAK_IN
    string file_path;
    int file_line;
}

public class CarpScript
{

}

public var carp_CarpScript:CarpScript;

public class CarpLuaDebugClient
{
    public fun Start(string ip, int port) {}
    public fun Close() {}
    public fun HandleEvent() : CarpLuaDebugEvent {}
    public fun AddBreakPoint(string file_path, int file_line) {}
    public fun RemoveBreakPoint(string file_path, int file_line) {}
    public fun ClearBreakPoint() {}
    public fun DoContinue() {}
    public fun DoNextLine() {}
}

public class CarpLuaDebugServer
{
    public fun Start(CarpScript script, string yun_ip, string ip, int port) : bool {}
    public fun Stop() {}
}

public var carp_CarpLuaDebugServer:CarpLuaDebugServer;

public class CarpLuaProfiler
{
    public fun Start(CarpScript script, string file_path) : bool {}
    public fun Stop() {}
}

public var carp_CarpLuaProfiler:CarpLuaProfiler;

public class CarpLuaDecompile
{
    public fun Decompile(string lua_path, string out_path) : bool {}
}