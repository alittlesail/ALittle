
namespace DeployServer;

public enum JobType
{
    NONE = 0;
    BATCH = 1;	// 批处理
}

protected struct JobInfo
{
    int job_type;		// 任务类型
    string job_name;

    // 批处理命令
    string batch_cmd;
    string batch_param;
}

public enum JobStatus
{
    WAITING = 0;	// 等待执行
    DOING = 1;		// 正在执行
    COMPLETED = 2;	// 执行完成
}

public struct D_JobInfo
{
    int job_type;
    string job_name;
    int status;
    double progress;	// 执行进度

    // 批处理命令
    string batch_cmd;
    string batch_param;
}

protected class Job
{
    private Task _task;
    private JobInfo _info;
    private int _status = 0;
    private double _progress = 0;

    public ctor(Task task, JobInfo info)
    {
        this._task = task;
        this._info = info;
    }

    public get info() : JobInfo { return this._info; }

    public get data_info() : D_JobInfo
    {
        var data = new D_JobInfo();
        data.job_type = this._info.job_type;
        data.job_name = this._info.job_name;
        data.status = this._status;
        data.progress = this._progress;
        return data;
    }

    public fun Modify(C2SModifyJob msg)
    {

        this._info.job_name = msg.job_name;    }

    public fun Waiting()
    {
        this._status = JobStatus.WAITING;
        this.SendStatus();
    }

    public await fun Doing() : string
    {
        this._status = JobStatus.DOING;
        this._progress = 0;
        this.SendStatus();

        // 执行
        var error = this.Execute();

        this._status = JobStatus.COMPLETED;
        this._progress = 1;
        this.SendStatus();
        return error;
    }

    private await fun Execute() : string { return null; }

    private fun SendStatus()
    {
        var status_msg = new NJobStatus();
        status_msg.task_id = this._task.info.task_id;
        status_msg.status = this._status;
        status_msg.progress = this._progress;
        A_WebAccountManager.SendMsgToAll(status_msg);
    }
}

public struct NJobStatus
{
    int task_id;
    int index;
    int status;
    double progress;
}

protected static CreateJob(Task task, JobInfo info) : Job
{
    if (info.job_type == JobType.BATCH)
    	return new BatchJob(task, info);
    return null;
}