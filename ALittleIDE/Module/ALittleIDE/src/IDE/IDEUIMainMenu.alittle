
namespace ALittleIDE;

protected class IDEUIMainMenu : ALittle.Linear
{
	// 版本管理器
	private AUIPlugin.AUIVersionManager _version_manager;

	public fun TCtor()
	{
        var group = new ALittle.TextRadioButtonGroup();
        for (var index, child in this._childs)
        	child.group = group;

		// 版本服务器
		var version_ip = g_IDEServerConfig.GetConfig("version_ip", "139.159.176.119");
		var version_port = g_IDEServerConfig.GetConfig("version_port", 1100);
		this._version_manager = new AUIPlugin.AUIVersionManager(version_ip, version_port, "alittle", "ALittleIDE");
		
		// 如果不是debug模式，那么就检查版本
		[Language(Lua)]
		if (!g_Control.crypt_mode) this._version_manager.CheckVersionUpdate();
	}

	public fun Shutdown()
	{
		[Language(Lua)]
		this._version_manager.Shutdown();
    }

    private fun HandleMenuHide(ALittle.DisplayObject button)
    {
        button.selected = false;
    }

	//////////////////////////////////////////////////////////////////////////////////////////-
	// 处理文件菜单
	private fun HandleFileMenuClick(ALittle.UIClickEvent event)
	{
		var menu = new AUIPlugin.AUIRightMenu();
		menu.AddItem("新建", bind(g_IDEProjectNewDialog.ShowNewProject, g_IDEProjectNewDialog));
		menu.AddItem("打开", bind(g_IDEProjectOpenDialog.ShowOpenProject, g_IDEProjectOpenDialog));
		menu.AddItem("设置", bind(g_IDEProjectSettingDialog.ShowSettingProject, g_IDEProjectSettingDialog));
		menu.AddItem("保存", bind(g_IDECenter.center.content_edit.SaveAllTab, g_IDECenter.center.content_edit));
		menu.AddItem("刷新", bind(g_IDECenter.RefreshProject, g_IDECenter));
		menu.AddItem("导出项目", bind(g_IDEProjectExportDialog.ShowExportProject, g_IDEProjectExportDialog));
		menu.Show(event.target, bind(this.HandleMenuHide, this, event.target));
	}
	// 处理编辑菜单
	private fun HandleEditMenuClick(ALittle.UIClickEvent event)
	{
		var menu = new AUIPlugin.AUIRightMenu();
		menu.AddItem("新建控件", bind(g_IDECenter.center.control_list.ShowNewControl, g_IDECenter.center.control_list, null));
		menu.AddItem("重做", bind(g_IDECenter.center.HandleDoRevoke, g_IDECenter.center, null));
		menu.AddItem("撤销", bind(g_IDECenter.center.HandleUndoRevoke, g_IDECenter.center, null));
		menu.Show(event.target, bind(this.HandleMenuHide, this, event.target));
	}
	// 处理工具菜单
	private fun HandleToolMenuClick(ALittle.UIClickEvent event)
	{
		var menu = new AUIPlugin.AUIRightMenu();
		menu.AddItem("生成core_all_in_one", bind(this.HandleGenCoreAllInOneClick, this));
		menu.AddItem("生成std_all_in_one", bind(this.HandleGenStdAllInOneClick, this));
		menu.AddItem("生成cengine_all_in_one", bind(this.HandleGenCEngineAllInOneClick, this));
		menu.Show(event.target, bind(this.HandleMenuHide, this, event.target));
	}
	// 处理版本菜单
	private fun HandleHelpMenuClick(ALittle.UIClickEvent event)
    {
		var menu = new AUIPlugin.AUIRightMenu();
        [Language(Lua)]
		menu.AddItem("版本检查", bind(this._version_manager.ShowDialog, this._version_manager));
		menu.Show(event.target, bind(this.HandleMenuHide, this, event.target));
    }
	// 处理运行
	private fun HandleRunMenuClick(ALittle.UIClickEvent event)
    {
		var menu = new AUIPlugin.AUIRightMenu();
        [Language(Lua)]
		menu.AddItem("启动(F6)", bind(g_IDEProject.RunProject, g_IDEProject, false));
        [Language(Lua)]
        if (!g_IDEProject.IsDebug())
			menu.AddItem("开始调试(F5)", bind(g_IDEProject.StartDebugProject, g_IDEProject));
        else
            menu.AddItem("继续(F5)", bind(g_IDEProject.StartDebugProject, g_IDEProject));
        [Language(Lua)]
        if (g_IDEProject.IsDebug())
			menu.AddItem("下一行(F10)", bind(g_IDEProject.NextLineDebug, g_IDEProject));
        [Language(Lua)]
        if (g_IDEProject.IsDebug())
			menu.AddItem("停止调试", bind(g_IDEProject.StopDebugProject, g_IDEProject));
		menu.Show(event.target, bind(this.HandleMenuHide, this, event.target));
    }

	// 生成核心库Core
	private fun HandleGenCoreAllInOneClick()
	{
		{
            var all_in_one = new List<string>();

    		var base_path = "Module/ALittleIDE/Other/GameLibrary/Core/JSScript/";
    		var file_list = new List<string>();
    		ALittle.List_Push(file_list, base_path.."ALittle.js");
    		ALittle.List_Push(file_list, base_path.."Core/Base.js");
    		ALittle.List_Push(file_list, base_path.."Core/Reflect.js");
    		ALittle.List_Push(file_list, base_path.."Core/JavaScript.js");
    		ALittle.List_Push(file_list, base_path.."Core/Log.js");
    		ALittle.List_Push(file_list, base_path.."Core/List.js");
    		ALittle.List_Push(file_list, base_path.."Core/Map.js");
    		ALittle.List_Push(file_list, base_path.."Core/Math.js");
    		ALittle.List_Push(file_list, base_path.."Core/String.js");
    		ALittle.List_Push(file_list, base_path.."Core/Time.js");
    		ALittle.List_Push(file_list, base_path.."Core/Coroutine.js");
    		ALittle.List_Push(file_list, base_path.."Core/Net.js");
    		for (var index, path in file_list)
    		{
    			all_in_one[index] = ALittle.File_ReadTextFromStdFile(path);
    			if (all_in_one[index] == null)
    			{
    				g_AUITool.ShowNotice("提示", "生成失败:"..path);
    				return;
                }
    		}
    		var result = ALittle.File_WriteTextFromStdFile(ALittle.String_Join(all_in_one, "\n"), "Module/ALittleIDE/Other/GameLibrary/Core/JSNative/Core.js");
            if (!result)
            {
                g_AUITool.ShowNotice("提示", "生成失败");
                return;
            }
        }

		{
            var all_in_one = new List<string>();

    		var base_path = "Module/ALittleIDE/Other/GameLibrary/Core/Script/";
    		var file_list = new List<string>();
    		ALittle.List_Push(file_list, base_path.."ALittle.lua");
    		ALittle.List_Push(file_list, base_path.."Core/Base.lua");
    		ALittle.List_Push(file_list, base_path.."Core/Reflect.lua");
    		ALittle.List_Push(file_list, base_path.."Core/Lua.lua");
    		ALittle.List_Push(file_list, base_path.."Core/Log.lua");
    		ALittle.List_Push(file_list, base_path.."Core/List.lua");
    		ALittle.List_Push(file_list, base_path.."Core/Map.lua");
    		ALittle.List_Push(file_list, base_path.."Core/Math.lua");
    		ALittle.List_Push(file_list, base_path.."Core/String.lua");
    		ALittle.List_Push(file_list, base_path.."Core/Time.lua");
    		ALittle.List_Push(file_list, base_path.."Core/Coroutine.lua");
    		ALittle.List_Push(file_list, base_path.."Core/Net.lua");
    		for (var index, path in file_list)
    		{
    			all_in_one[index] = ALittle.File_ReadTextFromStdFile(path);
    			if (all_in_one[index] == null)
    			{
    				g_AUITool.ShowNotice("提示", "生成失败:"..path);
    				return;
                }
    		}
    		var result = ALittle.File_WriteTextFromStdFile(ALittle.String_Join(all_in_one, "\n"), "Module/ALittleIDE/Other/GameLibrary/Core/LuaNative/Core.lua");
            if (!result)
            {
                g_AUITool.ShowNotice("提示", "生成失败");
                return;
            }
        }

		g_AUITool.ShowNotice("提示", "生成成功");
    }
	// 生成标准库Std
	private fun HandleGenStdAllInOneClick()
	{
		{
            var all_in_one = new List<string>();

    		var base_path = "Module/ALittleIDE/Other/GameLibrary/Std/JSScript/";
    		var file_list = new List<string>();
    		ALittle.List_Push(file_list, base_path.."ALittle.js");
    		ALittle.List_Push(file_list, base_path.."Cmd/ReflectCmd.js");
    		ALittle.List_Push(file_list, base_path.."Config/ReflectCsv.js");
    		ALittle.List_Push(file_list, base_path.."Net/ReflectMessage.js");

    		ALittle.List_Push(file_list, base_path.."Loop/LoopObject.js");
    		ALittle.List_Push(file_list, base_path.."Loop/ILoopSystem.js");
    		ALittle.List_Push(file_list, base_path.."Loop/LoopFrame.js");
    		ALittle.List_Push(file_list, base_path.."Loop/LoopFunction.js");
    		ALittle.List_Push(file_list, base_path.."Loop/LoopGroup.js");
    		ALittle.List_Push(file_list, base_path.."Loop/LoopList.js");
    		ALittle.List_Push(file_list, base_path.."Loop/LoopTimer.js");

    		ALittle.List_Push(file_list, base_path.."Config/CsvConfig.js");
    		ALittle.List_Push(file_list, base_path.."Config/JsonConfig.js");

    		ALittle.List_Push(file_list, base_path.."WeakRef/WeakRef.js");
    		ALittle.List_Push(file_list, base_path.."Loop/IHeapTimer.js");
    		ALittle.List_Push(file_list, base_path.."Schedule/ISchedule.js");
    		ALittle.List_Push(file_list, base_path.."Utility/EventDispatcher.js");
    		ALittle.List_Push(file_list, base_path.."Utility/SafeIDCreator.js");
    		ALittle.List_Push(file_list, base_path.."String/String.js");
    		ALittle.List_Push(file_list, base_path.."File/File.js");

    		ALittle.List_Push(file_list, base_path.."Net/HttpFileReceiverTemplate.js");
    		ALittle.List_Push(file_list, base_path.."Net/HttpFileSenderTemplate.js");
    		ALittle.List_Push(file_list, base_path.."Net/HttpReceiverTemplate.js");
    		ALittle.List_Push(file_list, base_path.."Net/HttpSenderTemplate.js");
    		ALittle.List_Push(file_list, base_path.."Net/MsgCommonTemplate.js");
    		ALittle.List_Push(file_list, base_path.."Net/MsgReceiverTemplate.js");
    		ALittle.List_Push(file_list, base_path.."Net/MsgSenderTemplate.js");
    		ALittle.List_Push(file_list, base_path.."Net/MsgSessionTemplate.js");

            ALittle.List_Push(file_list, base_path.."Loop/JavaScript/JHeapTimer.js");
            ALittle.List_Push(file_list, base_path.."File/JavaScript/JFileSystem.js");
            ALittle.List_Push(file_list, base_path.."Net/JavaScript/JHttpFileInterface.js");
            ALittle.List_Push(file_list, base_path.."Net/JavaScript/JHttpFileWxInterface.js");
            ALittle.List_Push(file_list, base_path.."Net/JavaScript/JHttpInterface.js");
            ALittle.List_Push(file_list, base_path.."Net/JavaScript/JHttpWxInterface.js");
            ALittle.List_Push(file_list, base_path.."Net/JavaScript/JMessageFactory.js");
            ALittle.List_Push(file_list, base_path.."Net/JavaScript/JMsgInterface.js");
            ALittle.List_Push(file_list, base_path.."Schedule/JavaScript/JSchedule.js");
            ALittle.List_Push(file_list, base_path.."Config/JavaScript/JCsvFile.js");

            ALittle.List_Push(file_list, base_path.."Loop/LoopSystem.js");
            ALittle.List_Push(file_list, base_path.."Schedule/Schedule.js");
    		for (var index, path in file_list)
    		{
    			all_in_one[index] = ALittle.File_ReadTextFromStdFile(path);
    			if (all_in_one[index] == null)
    			{
    				g_AUITool.ShowNotice("提示", "生成失败! 文件加载失败:"..path);
    				return;
                }
    		}
    		var result = ALittle.File_WriteTextFromStdFile(ALittle.String_Join(all_in_one, "\n"), "Module/ALittleIDE/Other/GameLibrary/Std/JSNative/Std.js");
            if (!result)
            {
                g_AUITool.ShowNotice("提示", "生成失败");
                return;
            }
        }

		{
            var all_in_one = new List<string>();

    		var base_path = "Module/ALittleIDE/Other/GameLibrary/Std/Script/";
    		var file_list = new List<string>();
    		ALittle.List_Push(file_list, base_path.."ALittle.lua");

            ALittle.List_Push(file_list, base_path.."Cmd/ReflectCmd.lua");
            ALittle.List_Push(file_list, base_path.."Config/ReflectCsv.lua");
            ALittle.List_Push(file_list, base_path.."Net/ReflectMessage.lua");

            ALittle.List_Push(file_list, base_path.."Loop/LoopObject.lua");
            ALittle.List_Push(file_list, base_path.."Loop/ILoopSystem.lua");
            ALittle.List_Push(file_list, base_path.."Loop/LoopFrame.lua");
            ALittle.List_Push(file_list, base_path.."Loop/LoopFunction.lua");
            ALittle.List_Push(file_list, base_path.."Loop/LoopGroup.lua");
            ALittle.List_Push(file_list, base_path.."Loop/LoopList.lua");
            ALittle.List_Push(file_list, base_path.."Loop/LoopTimer.lua");

            ALittle.List_Push(file_list, base_path.."Config/CsvConfig.lua");
            ALittle.List_Push(file_list, base_path.."Config/JsonConfig.lua");

            ALittle.List_Push(file_list, base_path.."WeakRef/WeakRef.lua");
            ALittle.List_Push(file_list, base_path.."Loop/IHeapTimer.lua");
            ALittle.List_Push(file_list, base_path.."Schedule/ISchedule.lua");
            ALittle.List_Push(file_list, base_path.."Utility/EventDispatcher.lua");
            ALittle.List_Push(file_list, base_path.."Utility/SafeIDCreator.lua");
            ALittle.List_Push(file_list, base_path.."String/String.lua");
            ALittle.List_Push(file_list, base_path.."File/File.lua");

            ALittle.List_Push(file_list, base_path.."Net/HttpFileReceiverTemplate.lua");
            ALittle.List_Push(file_list, base_path.."Net/HttpFileSenderTemplate.lua");
            ALittle.List_Push(file_list, base_path.."Net/HttpReceiverTemplate.lua");
            ALittle.List_Push(file_list, base_path.."Net/HttpSenderTemplate.lua");
            ALittle.List_Push(file_list, base_path.."Net/MsgCommonTemplate.lua");
            ALittle.List_Push(file_list, base_path.."Net/MsgReceiverTemplate.lua");
            ALittle.List_Push(file_list, base_path.."Net/MsgSenderTemplate.lua");
            ALittle.List_Push(file_list, base_path.."Net/MsgSessionTemplate.lua");
        
            ALittle.List_Push(file_list, base_path.."Loop/IHeapTimer.lua");
            ALittle.List_Push(file_list, base_path.."Config/Lua/LuaCsvFile.lua");
            ALittle.List_Push(file_list, base_path.."Net/Lua/LuaHttpFileInterface.lua");
            ALittle.List_Push(file_list, base_path.."Net/Lua/LuaHttpInterface.lua");
            ALittle.List_Push(file_list, base_path.."Net/Lua/LuaMsgInterface.lua");
            ALittle.List_Push(file_list, base_path.."Schedule/Lua/LuaSchedule.lua");
        
            ALittle.List_Push(file_list, base_path.."Loop/LoopSystem.lua");
            ALittle.List_Push(file_list, base_path.."Schedule/Schedule.lua");
    		for (var index, path in file_list)
    		{
    			all_in_one[index] = ALittle.File_ReadTextFromStdFile(path);
    			if (all_in_one[index] == null)
    			{
    				g_AUITool.ShowNotice("提示", "生成失败! 文件加载失败:"..path);
    				return;
                }
    		}
    		var result = ALittle.File_WriteTextFromStdFile(ALittle.String_Join(all_in_one, "\n"), "Module/ALittleIDE/Other/GameLibrary/Std/LuaNative/Std.lua");
            if (!result)
            {
                g_AUITool.ShowNotice("提示", "生成失败");
                return;
            }
        }

        g_AUITool.ShowNotice("提示", "生成成功");
    }
	// 生成客户端引起CEngine
	private fun HandleGenCEngineAllInOneClick()
	{
		var base_path = "Module/ALittleIDE/Other/GameLibrary/CEngine/JSScript/";
		var file_list = new List<string>();
		ALittle.List_Push(file_list, base_path.."ALittle.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/IShow.js");
		ALittle.List_Push(file_list, base_path.."Adapter/PIXI/JSystem.js");
		ALittle.List_Push(file_list, base_path.."Adapter/PIXI/JShow.js");
		ALittle.List_Push(file_list, base_path.."Adapter/PIXI/JCsvLoader.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/String.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/File.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/System.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/ConfigSystem.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/OtherSystem.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/AudioSystem.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/ModuleSystem.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/CsvConfigManager.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/Revocation.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/Debug.js");
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."CEngine/LoopSystem/"));
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/UIEnumTypes.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/UIEventDispatcher.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Matrix2D.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/DisplayObject.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/DisplayGroup.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/DisplayLayout.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/DisplayView.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Quad.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Image.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Sprite.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Text.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/TextArea.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/TextEdit.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/TextInput.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Triangle.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/VertexImage.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Grid9Image.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/TextButton.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/TextCheckButton.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/TextRadioButton.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Grid3.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Grid9.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Linear.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Tab.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/DropDown.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Slider.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ScrollBar.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ScrollScreen.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Dialog.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/TileTable.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ImagePlay.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/SpritePlay.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/SpriteNumber.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/FramePlay.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Piechart.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ImageInput.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ImageEdit.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/RichArea.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/RichEdit.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/RichInput.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ScrollList.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ScrollButton.js");
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."CEngine/UISystem/Special/"));
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."CEngine/UISystem/Plugin/"));
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."CEngine/UISystem/Effect/"));
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."CEngine/UISystem/Tile/"));
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/UISystem.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/LayerManager.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/TextureManager.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/ControlSystem.js");
		var file_index = 1;
		var file_size = 0;
		var list_index = 1;
		var all_in_one:List<string> = null;
		for (var index, path in file_list)
		{
			var content = ALittle.File_ReadTextFromStdFile(path);
			if (content == null)
			{
				g_AUITool.ShowNotice("提示", "生成失败");
				return;
            }
			var len = ALittle.String_Len(content);
			if (file_size + len >= 500*1024)
			{
                if (all_in_one != null)
				{
					var result = ALittle.File_WriteTextFromStdFile(ALittle.String_Join(all_in_one, "\n"), "Module/ALittleIDE/Other/GameLibrary/CEngine/JSNative/CEngine"..file_index..".js");
					if (!result)
					{
						g_AUITool.ShowNotice("提示", "生成失败");
						return;
                    }
                }
				all_in_one = null;
				list_index = 1;
				file_size = 0;
				++file_index;
            }

			if (file_size + len < 500 * 1024)
			{
				file_size += len;
				if (all_in_one == null)
                    all_in_one = new List<string>();
				all_in_one[list_index] = content;
				++ list_index;
            }
		}

		if (all_in_one != null)
		{
			var result = ALittle.File_WriteTextFromStdFile(ALittle.String_Join(all_in_one, "\n"), "Module/ALittleIDE/Other/GameLibrary/CEngine/JSNative/CEngine"..file_index..".js");
			if (!result)
			{
				g_AUITool.ShowNotice("提示", "生成失败");
				return;
            }
        }
		
		g_AUITool.ShowNotice("提示", "生成成功");
    }
}