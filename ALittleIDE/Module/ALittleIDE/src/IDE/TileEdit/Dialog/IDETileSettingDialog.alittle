
namespace ALittleIDE;

public class IDETileSettingDialog
{
	private ALittle.Dialog _dialog;
    private ALittle.DropDown _tile_type;
    private ALittle.TextInput _side_len;

    private ALittle.TileMap _tile_map;
    private ALittle.Thread _thread;

	private fun CreateDialog()
	{
        this._dialog = g_Control.CreateControl{ALittle.Dialog}("ide_tile_setting_dialog", this);
        A_LayerManager.AddToModal(this._dialog);
        this._dialog.visible = false;
        this._dialog.close_callback = bind(this.HandleClose, this);
	}

	public await fun ShowDialog(ALittle.TileMap tile_map) : bool
	{
		if (this._dialog == null) this.CreateDialog();
		this._dialog.visible = true;

        if (tile_map.tile_type == ALittle.TileType.SQUARE)
        	this._tile_type.text = "正方形";
        elseif (tile_map.tile_type == ALittle.TileType.HEX_H)
        	this._tile_type.text = "水平正六边形";
        elseif (tile_map.tile_type == ALittle.TileType.HEX_V)
        	this._tile_type.text = "垂直正六边形";
        else
        	this._tile_type.text = "";

        this._side_len.text = tile_map.side_len;

        this._tile_map = tile_map;
        this._thread = co;
        return yield;
	}

    private fun HandleClose() : bool
    {
        this.HandleTileSettingCancel(null);
        return true;
    }

    private fun HandleTileSettingCancel(ALittle.UIClickEvent event)
    {
        this._dialog.visible = false;
        this._tile_map = null;
        var thread = this._thread;
        this._thread = null;
        if (thread != null) ALittle.Coroutine.Resume(thread, false);
    }

    private fun HandleTileSettingConfirm(ALittle.UIClickEvent event)
    {
        this._dialog.visible = false;
        var tile_map = this._tile_map;
        this._tile_map = null;
        var thread = this._thread;
        this._thread = null;

        if (this._tile_type.text == "正方形")
        	tile_map.tile_type = ALittle.TileType.SQUARE;
        elseif (this._tile_type.text == "水平正六边形")
        	tile_map.tile_type = ALittle.TileType.HEX_H;
        elseif (this._tile_type.text == "垂直正六边形")
        	tile_map.tile_type = ALittle.TileType.HEX_V;

        tile_map.side_len = ALittle.Math_ToIntOrZero(this._side_len.text);

        if (thread != null) ALittle.Coroutine.Resume(thread, true);
    }
}

protected var g_IDETileSettingDialog = new IDETileSettingDialog();