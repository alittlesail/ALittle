
namespace ALittleIDE;

protected struct IDETileTreeUserInfo
{
    AUIPlugin.AUIFileTreeUserInfo info;
    string module_name;
}

protected class IDEUITileList : AUIPlugin.AUIFileTreeLayout
{
    public fun TCtor()
    {
        g_IDEProject.AddEventListener(this, this.HandleProjectOpen);
        g_IDEProject.AddEventListener(this, this.HandleProjectClose);

        this.AddEventListener(this, this.HandleSelectFileEvent);
        this.AddEventListener(this, this.HandleDeleteFileEvent);
        this.AddEventListener(this, this.HandleCreateFileEvent);
        this.AddEventListener(this, this.HandleDeleteDirEvent);
    }

    private fun HandleSelectFileEvent(AUIPlugin.AUIFileSelectFileEvent event)
    {
        var info = new IDETileTreeUserInfo();
        info.info = event.info;
        info.module_name = g_IDEProject.project.name;
        g_IDECenter.center.content_edit.StartEditTileBySelect(info.info.name, info);
    }

    private fun HandleDeleteFileEvent(AUIPlugin.AUIFileDeleteFileEvent event)
    {

    }

    private fun HandleCreateFileEvent(AUIPlugin.AUIFileCreateFileEvent event)
    {

    }

    private fun HandleDeleteDirEvent(AUIPlugin.AUIFileDeleteDirEvent event)
    {

    }

    private fun OnRightMenu(AUIPlugin.AUIFileTreeUserInfo user_info, AUIPlugin.AUIRightMenu menu)
    {

    }

	private fun HandleProjectClose(IDEProjectCloseEvent event)
	{
		this._file_scroll_screen.RemoveAllChild();
    }

	private async fun HandleProjectOpen(IDEProjectOpenEvent event)
	{
		var module_path = ALittle.File_BaseFilePath().."Module/"..event.name.."/Tile";
        this.SetRoot(module_path, bind(this.OnRightMenu, this));
    }
}