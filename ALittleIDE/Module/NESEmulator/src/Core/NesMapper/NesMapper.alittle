
namespace NESEmulator;

protected class NesMapper
{
    private NesCore _nes;

    public int _zapper_x;
    public int _zapper_y;
    public bool _zapper_fired;

    public ctor(NesCore nes)
    {
        this._nes = nes;
    }

    // 重置
    public fun Reset()
    {
        this._zapper_fired = false;
        this._zapper_x = null;
        this._zapper_y = null;
    }
    // 重新加载ROM
    public fun LoadROM() : string { return "not implement"; }
    // 根据地址读取一个字节
    public fun Load(int address) : int { return 0; }
    // 根据地址写入一个字节
    public fun Write(int address, int value) {}
    
    public fun ClockIrqCounter() {}
    public fun LatchAccess(int address) {}
}

protected static CreateNesMapper(NesCore nes, int type) : NesMapper
{
    if (type == 0) return new NesMapper0(nes);
    if (type == 1) return new NesMapper1(nes);
    if (type == 2) return new NesMapper2(nes);
    if (type == 3) return new NesMapper3(nes);
    if (type == 4) return new NesMapper4(nes);
    if (type == 5) return new NesMapper5(nes);
    if (type == 7) return new NesMapper7(nes);
    if (type == 11) return new NesMapper11(nes);
    if (type == 34) return new NesMapper34(nes);
    if (type == 38) return new NesMapper38(nes);
    if (type == 66) return new NesMapper66(nes);
    if (type == 74) return new NesMapper4(nes);
    if (type == 94) return new NesMapper94(nes);
    if (type == 140) return new NesMapper140(nes);
    if (type == 180) return new NesMapper180(nes);
    return null;
}
