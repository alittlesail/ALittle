
namespace NESEmulator;

protected class NesMapper94 : NesMapper0
{
    public fun Write(int address, int value)
    {
        // Writes to addresses other than MMC registers are handled by NoMapper.
        if (address < 0x8000) {
            NesMapper0.Write(this, address, value);
            return;
        } else {
            // This is a ROM bank select command.
            // Swap in the given ROM bank at 0x8000:
            this.LoadRomBank(value ->> 2, 0x8000);
        }
    }

    public fun LoadROM() : string
    {
        if (!this._nes._rom._valid) {
            return "UN1ROM: Invalid ROM! Unable to load.";
        }

            // Load PRG-ROM:
        this.LoadRomBank(0, 0x8000);
        this.LoadRomBank(this._nes._rom._rom_count - 1, 0xc000);

        // Load CHR-ROM:
        this.LoadCHRROM();

        // Do Reset-Interrupt:
        this._nes._cpu.RequestIrq(NesCPUIRQ.IRQ_RESET);

        return null;
    }
}
