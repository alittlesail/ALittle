
namespace NESEmulator;

protected class GController : ALittle.DisplayLayout
{
    private int _key_type;
    private double _margin_rate = 0;	// 中心阔值比例

    public fun TCtor()
    {

    }

    private fun UpdateDir(ALittle.DisplayObject target, double rel_x, double rel_y)
    {
        var width = target.width;
        var height = target.height;

        var w_margin = width / 2 - width / 2 * this._margin_rate;
        var h_margin = height / 2 - height / 2 * this._margin_rate;

        var h_key_delta:double = 0;
    
        var h_key:int = null;
        {
            if (rel_x < w_margin)
            {
                h_key = NesControlType.BUTTON_LEFT;
                h_key_delta = w_margin - rel_x;
            }
            elseif (rel_x > width - w_margin)
            {
                h_key = NesControlType.BUTTON_RIGHT;
                h_key_delta = rel_x - (width - w_margin);
            }
        }

        var v_key_delta:double = 0;
    
        var v_key:int = null;
        {
            if (rel_y < h_margin)
            {
                v_key = NesControlType.BUTTON_UP;
                v_key_delta = h_margin - rel_y;
            }
            elseif (rel_y > height - h_margin)
            {
                v_key = NesControlType.BUTTON_DOWN;
                v_key_delta = rel_y - (height - h_margin);
            }
        }

        var new_key:int;
        if (h_key == null && v_key != null)
            new_key = v_key;
        elseif (h_key != null && v_key == null)
            new_key = h_key;
        elseif (h_key != null && v_key != null)
        {
            if (h_key_delta > v_key_delta)
        		new_key = h_key;
            else
            	new_key = v_key;
        }

        if (this._key_type == new_key) return;

        if (this._key_type != null)
            g_GNes.ButtonUp(1, this._key_type);

        this._key_type = new_key;

        if (this._key_type != null)
        	g_GNes.ButtonDown(1, this._key_type);
    }

    private fun StopDir()
    {
        if (this._key_type != null)
            g_GNes.ButtonUp(1, this._key_type);

        this._key_type = null;
    }

    private fun HandleLButtonDown(ALittle.UILButtonDownEvent event) { this.UpdateDir(event.target, event.rel_x, event.rel_y); }
    private fun HandleLButtonUp(ALittle.UILButtonUpEvent event) { this.StopDir(); }
    private fun HandleFingerDown(ALittle.UIFingerDownEvent event) { this.UpdateDir(event.target, event.rel_x, event.rel_y); }
    private fun HandleFingerUp(ALittle.UIFingerUpEvent event) { this.StopDir(); }

    private fun HandleButtonDrag(ALittle.UIButtonDragEvent event) { this.UpdateDir(event.target, event.rel_x, event.rel_y); }
    private fun HandleButtonDragEnd(ALittle.UIButtonDragEvent event) { this.StopDir(); }
    private fun HandleFingerDrag(ALittle.UIButtonDragEvent event) { this.UpdateDir(event.target, event.rel_x, event.rel_y); }
    private fun HandleFingerDragEnd(ALittle.UIButtonDragEvent event) { this.StopDir(); }

    private fun HandleSelectDown(ALittle.UILButtonDownEvent event) { g_GNes.ButtonDown(1, NesControlType.BUTTON_SELECT); }
    private fun HandleSelectUp(ALittle.UILButtonDownEvent event) { g_GNes.ButtonUp(1, NesControlType.BUTTON_SELECT); }
    private fun HandleFSelectDown(ALittle.UIFingerDownEvent event) { g_GNes.ButtonDown(1, NesControlType.BUTTON_SELECT); }
    private fun HandleFSelectUp(ALittle.UIFingerDownEvent event) { g_GNes.ButtonUp(1, NesControlType.BUTTON_SELECT); }

    private fun HandleStartDown(ALittle.UILButtonDownEvent event) { g_GNes.ButtonDown(1, NesControlType.BUTTON_START); }
    private fun HandleStartUp(ALittle.UILButtonDownEvent event) { g_GNes.ButtonUp(1, NesControlType.BUTTON_START); }
    private fun HandleFStartDown(ALittle.UIFingerDownEvent event) { g_GNes.ButtonDown(1, NesControlType.BUTTON_START); }
    private fun HandleFStartUp(ALittle.UIFingerDownEvent event) { g_GNes.ButtonUp(1, NesControlType.BUTTON_START); }

    private fun HandleBDown(ALittle.UILButtonDownEvent event) { g_GNes.ButtonDown(1, NesControlType.BUTTON_B); }
    private fun HandleBUp(ALittle.UILButtonDownEvent event) { g_GNes.ButtonUp(1, NesControlType.BUTTON_B); }
    private fun HandleFBDown(ALittle.UIFingerDownEvent event) { g_GNes.ButtonDown(1, NesControlType.BUTTON_B); }
    private fun HandleFBUp(ALittle.UIFingerDownEvent event) { g_GNes.ButtonUp(1, NesControlType.BUTTON_B); }

    private fun HandleADown(ALittle.UILButtonDownEvent event) { g_GNes.ButtonDown(1, NesControlType.BUTTON_A); }
    private fun HandleAUp(ALittle.UILButtonDownEvent event) { g_GNes.ButtonUp(1, NesControlType.BUTTON_A); }
    private fun HandleFADown(ALittle.UIFingerDownEvent event) { g_GNes.ButtonDown(1, NesControlType.BUTTON_A); }
    private fun HandleFAUp(ALittle.UIFingerDownEvent event) { g_GNes.ButtonUp(1, NesControlType.BUTTON_A); }
}
